<script>
    //新版六 物件使用方式
class Bike {
    constructor(speed){
        document.write("Bike()");
        this.speed = speed;
        this.name  ='AAAAAAAAAA';
    }
    upSpeed(){
        document.write("Bike:upSpeed()<br>");
    }
    static m1(){
        document.write("Bike:m1():<br>");
    }

}
class Scooter extends Bike{
    constructor(speed,gear){
        document.write("Scooter()<br>");
        super(speed);
        this.speed = speed;
        this.gear = gear;
    }
    
    chGear(gear){
        document.write("Scooter:chgear()<br>");
        this.gear = gear;
    }
    upSpeed(){
        super.upSpeed(); //父類別原方法呼叫 super
        document.write("Scooter:upSpeed()<br>");
    }
}

class sleigh{
    constructor(...X){ //帶多個參數
        document.write("sleigh()<br>");
    }
}

let b1 = new Bike(123);
document.write("<br>");
b1.upSpeed();
document.write(b1.speed + "<hr>");

let s1 = new Scooter(234);
document.write("<br>");
s1.upSpeed();
s1.chGear(4);
document.write(s1.speed + "<hr>");
document.write(b1 instanceof Bike); //true
document.write("<br>");
document.write(s1 instanceof Bike); //true
document.write("<br>");
document.write(b1 instanceof Scooter);//false
document.write("<br>");
document.write(s1 instanceof Scooter); //true
document.write("<br>");
let sleigh1 = new sleigh();
let sleigh2 = new sleigh(1);
let sleigh3 = new sleigh(1,2);
let sleigh4 = new sleigh(1,2,3);

Bike.m1();
//Scooter.m1();

</script>